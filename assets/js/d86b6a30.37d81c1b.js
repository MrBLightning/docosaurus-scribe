"use strict";(self.webpackChunkscribe=self.webpackChunkscribe||[]).push([[844],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),b=u(t),m=i,d=b["".concat(c,".").concat(m)]||b[m]||p[m]||s;return t?r.createElement(d,a(a({ref:n},l),{},{components:t})):r.createElement(d,a({ref:n},l))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,a=new Array(s);a[0]=b;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var u=2;u<s;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},6050:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return u},assets:function(){return l},toc:function(){return p},default:function(){return m}});var r=t(7462),i=t(3366),s=(t(7294),t(3905)),a=["components"],o={sidebar_position:2},c="Jenkins",u={unversionedId:"ci-cd-integration/jenkins",id:"ci-cd-integration/jenkins",title:"Jenkins",description:"Integrate as a step in Jenkins pipelines.",source:"@site/docs/ci-cd-integration/jenkins.md",sourceDirName:"ci-cd-integration",slug:"/ci-cd-integration/jenkins",permalink:"/docosaurus-scribe/docs/ci-cd-integration/jenkins",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"GitHub Actions",permalink:"/docosaurus-scribe/docs/ci-cd-integration/github-actions"},next:{title:"Detecting CVEs",permalink:"/docosaurus-scribe/docs/cves"}},l={},p=[],b={toc:p};function m(e){var n=e.components,t=(0,i.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"jenkins"},"Jenkins"),(0,s.kt)("p",null,"Integrate as a step in Jenkins pipelines.",(0,s.kt)("br",{parentName:"p"}),"\n","Important to note that this is for Jenkins over Kubernetes only."),(0,s.kt)("details",null,(0,s.kt)("summary",null,"  Scribe integrity report - full pipeline "),(0,s.kt)("p",null,"Full workflow example, uploading evidence using gensbom and downloading the report using valint.\nIn this example the final step is to attach the report and evidence to your pipeline run."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-YAML"},"pipeline {\n  agent {\n    kubernetes {\n      yamlFile 'jenkins/k8s/scribe-test/KubernetesPod.yaml'\n    }\n  }\n  stages {\n    stage('checkout-bom') {\n      steps {        \n        container('git') {\n          sh 'git clone -b v1.0.0-alpha.4 --single-branch https://github.com/mongo-express/mongo-express.git mongo-express-scm'\n        }\n        \n        container('bomber') {\n          withCredentials([usernamePassword(credentialsId: 'scribe-staging-auth-id', usernameVariable: 'SCRIBE_CLIENT_ID', passwordVariable: 'SCRIBE_CLIENT_SECRET')]) {\n            sh '''\n            bomber bom dir:mongo-express-scm \\\n            --context-type jenkins \\\n            --output-directory ./scribe/bomber \\\n             -E -U $SCRIBE_CLIENT_ID -P $SCRIBE_CLIENT_SECRET \\\n             --scribe.loginurl=https://scribesecurity-staging.us.auth0.com --scribe.auth0.audience=api.staging.scribesecurity.com --scribe.url https://api.staging.scribesecurity.com \\\n            -vv'''\n          }\n        }\n      }\n    }\n\n    stage('image-bom') {\n      steps {\n        container('bomber') {\n           withCredentials([usernamePassword(credentialsId: 'scribe-staging-auth-id', usernameVariable: 'SCRIBE_CLIENT_ID', passwordVariable: 'SCRIBE_CLIENT_SECRET')]) {  \n            sh '''\n            bomber bom mongo-express:1.0.0-alpha.4 \\\n            --context-type jenkins \\\n            --output-directory ./scribe/bomber \\\n            -E -U $SCRIBE_CLIENT_ID -P $SCRIBE_CLIENT_SECRET \\\n            --scribe.loginurl=https://scribesecurity-staging.us.auth0.com --scribe.auth0.audience=api.staging.scribesecurity.com --scribe.url https://api.staging.scribesecurity.com \\\n            -vv'''\n          }\n        }\n      }\n    }\n\n    stage('download-report') {\n      steps {\n        container('valint') {\n           withCredentials([usernamePassword(credentialsId: 'scribe-staging-auth-id', usernameVariable: 'SCRIBE_CLIENT_ID', passwordVariable: 'SCRIBE_CLIENT_SECRET')]) {  \n            sh '''\n            valint report \\\n            -U $SCRIBE_CLIENT_ID -P $SCRIBE_CLIENT_SECRET --output-directory scribe/valint \\\n            --scribe.loginurl=https://scribesecurity-staging.us.auth0.com --scribe.auth.audience=api.staging.scribesecurity.com --scribe.url https://api.staging.scribesecurity.com \\\n            -vv'''\n          }\n          publish()\n        }\n      }\n    }\n  }\n}\n")),(0,s.kt)("p",null,"This example uses Jenkins over k8s plugin,",(0,s.kt)("br",{parentName:"p"}),"\n","Pod template needs these definitions to work"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-YAML"},"metadata:\n  labels:\n    some-label: jsl-scribe-test\nspec:\n  containers:\n  - name: jnlp\n    env:\n    - name: CONTAINER_ENV_VAR\n      value: jnlp\n  - name: bomber\n    image: scribesecuriy.jfrog.io/scribe-docker-public-local/bomber:latest \n    command:\n    - cat\n    tty: true\n  - name: valint\n    image: scribesecuriy.jfrog.io/scribe-docker-public-local/valint:latest\n    command:\n    - cat\n    tty: true\n  - name: git\n    image: alpine/git\n    command:\n      - cat\n    tty: true\n"))))}m.isMDXComponent=!0}}]);